{"version":3,"sources":["components/inputForm.jsx","components/anomalyChart.jsx","components/controller.jsx","index.js"],"names":["InputForm","props","selectionChanged","event","setState","detectorType","target","value","fileSelected","file","files","file_type","type","fileNameProperty","name","fileName","fileDataProperty","replace","fileError","includes","csvToJson","submitHandler","preventDefault","axios","post","state","learn","learnFile","anomaly","anomalyFile","then","response","anomalyReport","data","report","fixedReport","forEach","rep","first","timeStep","last","pop","push","description","parentCallback","catch","err","console","log","setDefaultState","learnFileName","anomalyFileName","learnFileError","anomalyFileError","mydata","baseState","fileReader","FileReader","readAsText","onload","lines","result","split","headers","len","length","i","obj","values","j","currentline","parseFloat","json","JSON","stringify","replaceAll","substring","this","Fragment","Row","Form","className","noValidate","onSubmit","Col","xs","Control","as","onChange","custom","Group","File","id","Input","onInput","isInvalid","Label","Feedback","Button","disabled","checkFormValidation","Component","CustomizedTooltip","active","payload","label","CustomizedLabelAxis","x","y","splitted","transform","textAnchor","fill","dy","AnomalyChart","useState","leftMargin","document","createElement","getContext","measureText","width","element","textWidth","ctx","Math","max","ResponsiveContainer","height","BarChart","margin","top","right","left","bottom","layout","CartesianGrid","strokeDasharray","XAxis","domain","YAxis","dataKey","position","dx","tick","Tooltip","content","Legend","Bar","Controller","setReport","random","ReactDOM","render","Container","fluid","style","textAlign","padding","fontSize","fontWeight","background","getElementById"],"mappings":"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","file":"static/js/main.e368144a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"../style.css\";\r\nimport axios from \"axios\";\r\n\r\nclass InputForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      detectorType: \"\",\r\n      learnFileName: \"Please Upload Learn CSV\",\r\n      anomalyFileName: \"Please Upload Anomaly CSV\",\r\n      learnFile: null, // learn file\r\n      anomalyFile: null, // test file\r\n      learnFileError: false, // for validation\r\n      anomalyFileError: false, // for validation\r\n      mydata: [],\r\n    };\r\n    // preserve the initial state to fall back to\r\n    this.baseState = this.state;\r\n  }\r\n  selectionChanged = (event) => {\r\n    this.setState({ detectorType: event.target.value });\r\n  };\r\n\r\n  csvToJson(file, fileDataProperty) {\r\n    let fileReader = new FileReader(); //creating new FileReader object\r\n    fileReader.readAsText(file, \"UTF-8\");\r\n    fileReader.onload = () => {\r\n      var lines = fileReader.result.split(/\\r\\n|\\r|\\n/g); //split by new line depending on system\r\n      var result = [];\r\n      var headers = lines[0].split(\",\");\r\n      var len = lines.length;\r\n      for (var i = 0; i < headers.length; i++) {\r\n        var obj = {};\r\n        var values = [];\r\n        for (var j = 1; j < len - 1; j++) {\r\n          var currentline = lines[j].split(\",\");\r\n          values.push(parseFloat(currentline[i]));\r\n        }\r\n        obj[headers[i]] = values;\r\n        result.push(obj);\r\n      }\r\n      var json = JSON.stringify(result); //JSON\r\n      json = json.replaceAll(\"{\", \"\");\r\n      json = json.replaceAll(\"}\", \"\");\r\n      json = json.substring(1, json.length - 1); // remove wrapping []\r\n      json = \"{\" + json + \"}\";\r\n      this.setState({ [fileDataProperty]: json });\r\n    };\r\n  }\r\n  // file selected handler\r\n  fileSelected = (event) => {\r\n    let file = event.target.files[0];\r\n    let file_type = file.type; //getting selected file type\r\n    let valid_extensions = [\"application/vnd.ms-excel\", \"csv\"]; //adding some valid csv extensions in array\r\n    let fileNameProperty = event.target.name;\r\n    let fileName = event.target.files[0].name;\r\n    this.setState({ [fileNameProperty]: fileName });\r\n    let fileDataProperty = fileNameProperty.replace(\"Name\", \"\");\r\n    let fileError = fileNameProperty.replace(\"Name\", \"Error\");\r\n    if (valid_extensions.includes(file_type)) {\r\n      // set error to be false\r\n      this.setState({ [fileError]: false });\r\n      // valid extention -> make json of it\r\n      this.csvToJson(file, fileDataProperty);\r\n    } else {\r\n      // invalid type -> raise error\r\n      this.setState({ [fileError]: true });\r\n    }\r\n    event.target.value = null;\r\n  };\r\n\r\n  setDefaultState() {\r\n    this.setState(this.baseState);\r\n  }\r\n  // if any of conditions are satisfied -> form is incomplete -> disable submit button\r\n  checkFormValidation() {\r\n    const {\r\n      detectorType,\r\n      learnFileName,\r\n      anomalyFileName,\r\n      learnFileError,\r\n      anomalyFileError,\r\n    } = this.state;\r\n    if (detectorType === this.baseState.detectorType) return true;\r\n    if (learnFileName === this.baseState.learnFileName || learnFileError)\r\n      return true;\r\n    if (anomalyFileName === this.baseState.anomalyFileName || anomalyFileError)\r\n      return true;\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(\"/detect\", {\r\n        detectorType: this.state.detectorType,\r\n        learn: this.state.learnFile,\r\n        anomaly: this.state.anomalyFile,\r\n      })\r\n      .then((response) => {\r\n        let anomalyReport = response.data.report; // this report.timeStep is of type = [1,2,3,4]\r\n        let fixedReport = []; // this fixedReport.timeStep will be of type= [1,4]\r\n        anomalyReport.forEach((rep) => {\r\n          let first = rep.timeStep[0];\r\n          let last = rep.timeStep.pop();\r\n          fixedReport.push({\r\n            description: rep.description,\r\n            timeStep: [first, last],\r\n          });\r\n        });\r\n        // update parent on the given report\r\n        this.props.parentCallback(fixedReport);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    //set the form back to default\r\n    this.setDefaultState();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Row>\r\n          <Form\r\n            className=\"m-3 items mainForm needs-validation\"\r\n            noValidate\r\n            onSubmit={this.submitHandler}\r\n          >\r\n            <Row>\r\n              <Col xs=\"auto\">\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  className=\"mr-sm-2\"\r\n                  onChange={this.selectionChanged}\r\n                  custom\r\n                  value={this.state.detectorType}\r\n                >\r\n                  <option value=\"\">Choose Algorithem...</option>\r\n                  <option value=\"regression\">Regression</option>\r\n                  <option value=\"hybrid\">Hybrid</option>\r\n                </Form.Control>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group>\r\n                  <Form.File className=\"inputFile\" id=\"custom-file\" custom>\r\n                    <Form.File.Input\r\n                      name=\"learnFileName\"\r\n                      onInput={this.fileSelected}\r\n                      isInvalid={this.state.learnFileError}\r\n                    />\r\n                    <Form.File.Label>\r\n                      {this.state.learnFileName}\r\n                    </Form.File.Label>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      file is not CSV type!\r\n                    </Form.Control.Feedback>\r\n                  </Form.File>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Form.Group>\r\n                  <Form.File className=\"inputFile\" id=\"custom-file\" custom>\r\n                    <Form.File.Input\r\n                      name=\"anomalyFileName\"\r\n                      onInput={this.fileSelected}\r\n                      isInvalid={this.state.anomalyFileError}\r\n                    />\r\n                    <Form.File.Label>\r\n                      {this.state.anomalyFileName}\r\n                    </Form.File.Label>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      file is not CSV type!\r\n                    </Form.Control.Feedback>\r\n                  </Form.File>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col>\r\n                <Button type=\"submit\" disabled={this.checkFormValidation()}>\r\n                  Submit\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Row>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"../style.css\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst CustomizedTooltip = ({ active, payload, label }) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div className=\"custom-tooltip\">\r\n        <p className=\"label\">{`Anomalies found from ${payload[0].value[0]} until ${payload[0].value[1]}`}</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\nconst CustomizedLabelAxis = ({ x, y, payload }) => {\r\n  const splitted = payload.value.split(\"~~\");\r\n  return (\r\n    <g transform={`translate(${x},${y})`}>\r\n      <text x={0} y={0} textAnchor=\"end\" fill=\"#666\">\r\n        <tspan>{splitted[0]}</tspan>\r\n        <tspan x={0} dy=\"20\">\r\n          {splitted[1]}\r\n        </tspan>\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n//helper func to measure each description\r\nfunction measureText(description) {\r\n  const splitted = description.split(\"~~\");\r\n  const ctx = document.createElement(\"canvas\").getContext(\"2d\");\r\n  return Math.max(\r\n    ctx.measureText(splitted[0]).width,\r\n    ctx.measureText(splitted[1]).width\r\n  );\r\n}\r\nconst AnomalyChart = (props) => {\r\n  const [data] = useState(props.data);\r\n  // to know how much margin we need to set as each description is of different length\r\n  let leftMargin = document\r\n    .createElement(\"canvas\")\r\n    .getContext(\"2d\")\r\n    .measureText(\"CorrelatedFeatures\").width;\r\n  data.forEach((element) => {\r\n    const textWidth = measureText(element.description);\r\n    if (textWidth > leftMargin) {\r\n      leftMargin = textWidth;\r\n    }\r\n  });\r\n  leftMargin += 50;\r\n  return (\r\n    <ResponsiveContainer className=\"chart\" width=\"75%\" height={300}>\r\n      <BarChart\r\n        data={data}\r\n        margin={{\r\n          top: 5,\r\n          right: 30,\r\n          left: leftMargin,\r\n          bottom: 5,\r\n        }}\r\n        layout=\"vertical\"\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis type=\"number\" domain={[\"auto\", \"auto\"]} />\r\n        <YAxis\r\n          type=\"category\"\r\n          dataKey=\"description\"\r\n          label={{\r\n            value: \"CorrelatedFeatures\",\r\n            position: \"insideTopLeft\",\r\n            dx: -90,\r\n          }}\r\n          tick={<CustomizedLabelAxis />}\r\n        />\r\n        <Tooltip content={<CustomizedTooltip />} />\r\n        <Legend />\r\n        <Bar dataKey=\"timeStep\" fill=\"#8884d8\" />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default AnomalyChart;\r\n","import React, { useState } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport InputForm from \"./inputForm\";\r\nimport AnomalyChart from \"./anomalyChart\";\r\nimport \"../style.css\";\r\n\r\nconst Controller = () => {\r\n  const [report, setReport] = useState([]);\r\n  const getAnomalies = (report) => {\r\n    setReport(report);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row>\r\n        <InputForm parentCallback={getAnomalies} />\r\n      </Row>\r\n\r\n      {report.length > 0 && (\r\n        <Row>\r\n          <AnomalyChart key={Math.random()} data={report} />\r\n        </Row>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Controller;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Controller from \"./components/controller\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style.css\";\r\n\r\nReactDOM.render(\r\n  <Container fluid>\r\n    <Row\r\n      style={{\r\n        textAlign: \"center\",\r\n        padding: \"10px 0\",\r\n        fontSize: \"50px\",\r\n        fontWeight: \"bold\",\r\n        background: \"rgba(0, 128, 0, 0.3)\",\r\n      }}\r\n    >\r\n      <Col>Anomaly Detection Server</Col>\r\n    </Row>\r\n    <Row>\r\n      <Controller />\r\n    </Row>\r\n  </Container>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}