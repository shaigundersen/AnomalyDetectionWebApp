{"ast":null,"code":"import _slicedToArray from\"C:/Users/97205/Desktop/ass2/AnomalyDetectionWebApp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import\"../style.css\";import{BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer}from\"recharts\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CustomizedTooltip=function CustomizedTooltip(_ref){var active=_ref.active,payload=_ref.payload,label=_ref.label;if(active&&payload&&payload.length){return/*#__PURE__*/_jsx(\"div\",{className:\"custom-tooltip\",children:/*#__PURE__*/_jsx(\"p\",{className:\"label\",children:\"Anomalies found from \".concat(payload[0].value[0],\" until \").concat(payload[0].value[1])})});}return null;};var CustomizedLabelAxis=function CustomizedLabelAxis(_ref2){var x=_ref2.x,y=_ref2.y,payload=_ref2.payload;var splitted=payload.value.split(\"~~\");return/*#__PURE__*/_jsx(\"g\",{transform:\"translate(\".concat(x,\",\").concat(y,\")\"),children:/*#__PURE__*/_jsxs(\"text\",{x:0,y:0,textAnchor:\"end\",fill:\"#666\",children:[/*#__PURE__*/_jsx(\"tspan\",{children:splitted[0]}),/*#__PURE__*/_jsx(\"tspan\",{x:0,dy:\"20\",children:splitted[1]})]})});};//helper func to measure each description\nfunction measureText(description){var splitted=description.split(\"~~\");var ctx=document.createElement(\"canvas\").getContext(\"2d\");return Math.max(ctx.measureText(splitted[0]).width,ctx.measureText(splitted[1]).width);}var AnomalyChart=function AnomalyChart(props){var _useState=useState(props.data),_useState2=_slicedToArray(_useState,1),data=_useState2[0];// to know how much margin we need to set as each description is of different length\nvar leftMargin=document.createElement(\"canvas\").getContext(\"2d\").measureText(\"CorrelatedFeatures\").width;data.forEach(function(element){var textWidth=measureText(element.description);if(textWidth>leftMargin){leftMargin=textWidth;}});leftMargin+=50;return/*#__PURE__*/_jsx(ResponsiveContainer,{className:\"chart\",width:\"75%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:data,margin:{top:5,right:30,left:leftMargin,bottom:5},layout:\"vertical\",children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{type:\"number\",domain:[\"auto\",\"auto\"]}),/*#__PURE__*/_jsx(YAxis,{type:\"category\",dataKey:\"description\",label:{value:\"CorrelatedFeatures\",position:\"insideTopLeft\",dx:-90},tick:/*#__PURE__*/_jsx(CustomizedLabelAxis,{})}),/*#__PURE__*/_jsx(Tooltip,{content:/*#__PURE__*/_jsx(CustomizedTooltip,{})}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"timeStep\",fill:\"#8884d8\"})]})});};export default AnomalyChart;","map":{"version":3,"sources":["C:/Users/97205/Desktop/ass2/AnomalyDetectionWebApp/frontend/src/components/anomalyChart.jsx"],"names":["React","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","CustomizedTooltip","active","payload","label","length","value","CustomizedLabelAxis","x","y","splitted","split","measureText","description","ctx","document","createElement","getContext","Math","max","width","AnomalyChart","props","data","leftMargin","forEach","element","textWidth","top","right","left","bottom","position","dx"],"mappings":"kLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAO,cAAP,CACA,OACEC,QADF,CAEEC,GAFF,CAGEC,KAHF,CAIEC,KAJF,CAKEC,aALF,CAMEC,OANF,CAOEC,MAPF,CAQEC,mBARF,KASO,UATP,C,wFAWA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAAgC,IAA7BC,CAAAA,MAA6B,MAA7BA,MAA6B,CAArBC,OAAqB,MAArBA,OAAqB,CAAZC,KAAY,MAAZA,KAAY,CACxD,GAAIF,MAAM,EAAIC,OAAV,EAAqBA,OAAO,CAACE,MAAjC,CAAyC,CACvC,mBACE,YAAK,SAAS,CAAC,gBAAf,uBACE,UAAG,SAAS,CAAC,OAAb,yCAA8CF,OAAO,CAAC,CAAD,CAAP,CAAWG,KAAX,CAAiB,CAAjB,CAA9C,mBAA2EH,OAAO,CAAC,CAAD,CAAP,CAAWG,KAAX,CAAiB,CAAjB,CAA3E,GADF,EADF,CAKD,CACD,MAAO,KAAP,CACD,CATD,CAUA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,OAAuB,IAApBC,CAAAA,CAAoB,OAApBA,CAAoB,CAAjBC,CAAiB,OAAjBA,CAAiB,CAAdN,OAAc,OAAdA,OAAc,CACjD,GAAMO,CAAAA,QAAQ,CAAGP,OAAO,CAACG,KAAR,CAAcK,KAAd,CAAoB,IAApB,CAAjB,CACA,mBACE,UAAG,SAAS,qBAAeH,CAAf,aAAoBC,CAApB,KAAZ,uBACE,cAAM,CAAC,CAAE,CAAT,CAAY,CAAC,CAAE,CAAf,CAAkB,UAAU,CAAC,KAA7B,CAAmC,IAAI,CAAC,MAAxC,wBACE,uBAAQC,QAAQ,CAAC,CAAD,CAAhB,EADF,cAEE,cAAO,CAAC,CAAE,CAAV,CAAa,EAAE,CAAC,IAAhB,UACGA,QAAQ,CAAC,CAAD,CADX,EAFF,GADF,EADF,CAUD,CAZD,CAaA;AACA,QAASE,CAAAA,WAAT,CAAqBC,WAArB,CAAkC,CAChC,GAAMH,CAAAA,QAAQ,CAAGG,WAAW,CAACF,KAAZ,CAAkB,IAAlB,CAAjB,CACA,GAAMG,CAAAA,GAAG,CAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCC,UAAjC,CAA4C,IAA5C,CAAZ,CACA,MAAOC,CAAAA,IAAI,CAACC,GAAL,CACLL,GAAG,CAACF,WAAJ,CAAgBF,QAAQ,CAAC,CAAD,CAAxB,EAA6BU,KADxB,CAELN,GAAG,CAACF,WAAJ,CAAgBF,QAAQ,CAAC,CAAD,CAAxB,EAA6BU,KAFxB,CAAP,CAID,CACD,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9B,cAAe9B,QAAQ,CAAC8B,KAAK,CAACC,IAAP,CAAvB,wCAAOA,IAAP,eACA;AACA,GAAIC,CAAAA,UAAU,CAAGT,QAAQ,CACtBC,aADc,CACA,QADA,EAEdC,UAFc,CAEH,IAFG,EAGdL,WAHc,CAGF,oBAHE,EAGoBQ,KAHrC,CAIAG,IAAI,CAACE,OAAL,CAAa,SAACC,OAAD,CAAa,CACxB,GAAMC,CAAAA,SAAS,CAAGf,WAAW,CAACc,OAAO,CAACb,WAAT,CAA7B,CACA,GAAIc,SAAS,CAAGH,UAAhB,CAA4B,CAC1BA,UAAU,CAAGG,SAAb,CACD,CACF,CALD,EAMAH,UAAU,EAAI,EAAd,CACA,mBACE,KAAC,mBAAD,EAAqB,SAAS,CAAC,OAA/B,CAAuC,KAAK,CAAC,KAA7C,CAAmD,MAAM,CAAE,GAA3D,uBACE,MAAC,QAAD,EACE,IAAI,CAAED,IADR,CAEE,MAAM,CAAE,CACNK,GAAG,CAAE,CADC,CAENC,KAAK,CAAE,EAFD,CAGNC,IAAI,CAAEN,UAHA,CAINO,MAAM,CAAE,CAJF,CAFV,CAQE,MAAM,CAAC,UART,wBAUE,KAAC,aAAD,EAAe,eAAe,CAAC,KAA/B,EAVF,cAWE,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,MAAM,CAAE,CAAC,MAAD,CAAS,MAAT,CAA7B,EAXF,cAYE,KAAC,KAAD,EACE,IAAI,CAAC,UADP,CAEE,OAAO,CAAC,aAFV,CAGE,KAAK,CAAE,CACLzB,KAAK,CAAE,oBADF,CAEL0B,QAAQ,CAAE,eAFL,CAGLC,EAAE,CAAE,CAAC,EAHA,CAHT,CAQE,IAAI,cAAE,KAAC,mBAAD,IARR,EAZF,cAsBE,KAAC,OAAD,EAAS,OAAO,cAAE,KAAC,iBAAD,IAAlB,EAtBF,cAuBE,KAAC,MAAD,IAvBF,cAwBE,KAAC,GAAD,EAAK,OAAO,CAAC,UAAb,CAAwB,IAAI,CAAC,SAA7B,EAxBF,GADF,EADF,CA8BD,CA5CD,CA8CA,cAAeZ,CAAAA,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"../style.css\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst CustomizedTooltip = ({ active, payload, label }) => {\r\n  if (active && payload && payload.length) {\r\n    return (\r\n      <div className=\"custom-tooltip\">\r\n        <p className=\"label\">{`Anomalies found from ${payload[0].value[0]} until ${payload[0].value[1]}`}</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\nconst CustomizedLabelAxis = ({ x, y, payload }) => {\r\n  const splitted = payload.value.split(\"~~\");\r\n  return (\r\n    <g transform={`translate(${x},${y})`}>\r\n      <text x={0} y={0} textAnchor=\"end\" fill=\"#666\">\r\n        <tspan>{splitted[0]}</tspan>\r\n        <tspan x={0} dy=\"20\">\r\n          {splitted[1]}\r\n        </tspan>\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n//helper func to measure each description\r\nfunction measureText(description) {\r\n  const splitted = description.split(\"~~\");\r\n  const ctx = document.createElement(\"canvas\").getContext(\"2d\");\r\n  return Math.max(\r\n    ctx.measureText(splitted[0]).width,\r\n    ctx.measureText(splitted[1]).width\r\n  );\r\n}\r\nconst AnomalyChart = (props) => {\r\n  const [data] = useState(props.data);\r\n  // to know how much margin we need to set as each description is of different length\r\n  let leftMargin = document\r\n    .createElement(\"canvas\")\r\n    .getContext(\"2d\")\r\n    .measureText(\"CorrelatedFeatures\").width;\r\n  data.forEach((element) => {\r\n    const textWidth = measureText(element.description);\r\n    if (textWidth > leftMargin) {\r\n      leftMargin = textWidth;\r\n    }\r\n  });\r\n  leftMargin += 50;\r\n  return (\r\n    <ResponsiveContainer className=\"chart\" width=\"75%\" height={300}>\r\n      <BarChart\r\n        data={data}\r\n        margin={{\r\n          top: 5,\r\n          right: 30,\r\n          left: leftMargin,\r\n          bottom: 5,\r\n        }}\r\n        layout=\"vertical\"\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis type=\"number\" domain={[\"auto\", \"auto\"]} />\r\n        <YAxis\r\n          type=\"category\"\r\n          dataKey=\"description\"\r\n          label={{\r\n            value: \"CorrelatedFeatures\",\r\n            position: \"insideTopLeft\",\r\n            dx: -90,\r\n          }}\r\n          tick={<CustomizedLabelAxis />}\r\n        />\r\n        <Tooltip content={<CustomizedTooltip />} />\r\n        <Legend />\r\n        <Bar dataKey=\"timeStep\" fill=\"#8884d8\" />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default AnomalyChart;\r\n"]},"metadata":{},"sourceType":"module"}