{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97205\\\\Desktop\\\\ass2\\\\AnomalyDetectionWebApp\\\\frontend\\\\src\\\\components\\\\inputForm.jsx\";\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport \"../style.css\";\nimport axios from \"axios\"; // an initial state to fall back to\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  detectorType: \"\",\n  learnFileName: \"Please Upload Learn CSV\",\n  anomalyFileName: \"Please Upload Anomaly CSV\",\n  learnFile: null,\n  // learn file\n  anomalyFile: null,\n  // test file\n  anomalyReport: null,\n  learnFileError: false,\n  // for validation\n  anomalyFileError: false // for validation\n\n};\n\nclass InputForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.selectionChanged = event => {\n      this.setState({\n        detectorType: event.target.value\n      });\n    };\n\n    this.fileSelected = event => {\n      let file = event.target.files[0];\n      let file_type = file.type; //getting selected file type\n\n      let valid_extensions = [\"application/vnd.ms-excel\", \"csv\"]; //adding some valid csv extensions in array\n\n      let fileNameProperty = event.target.name;\n      let fileName = event.target.files[0].name;\n      console.log(fileNameProperty);\n      console.log(this.state.learnFileName);\n      this.setState({\n        [fileNameProperty]: fileName\n      });\n      console.log(this.state.learnFileName);\n      let fileDataProperty = fileNameProperty.replace(\"Name\", \"\");\n      let fileError = fileNameProperty.replace(\"Name\", \"Error\");\n\n      if (valid_extensions.includes(file_type)) {\n        // set error to be false\n        this.setState({\n          [fileError]: false\n        }); // valid extention -> make json of it\n\n        this.csvToJson(file, fileDataProperty);\n      } else {\n        // invalid type -> raise error\n        this.setState({\n          [fileError]: true\n        });\n      }\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      axios.post(\"/detect\", {\n        detectorType: this.state.detectorType,\n        learn: this.state.learnFile,\n        anomaly: this.state.anomalyFile\n      }).then(response => {\n        this.setState({\n          anomalyReport: response.data.report\n        });\n      }).catch(err => console.log(err)); //set the form back to default\n\n      this.reset(); //this.setDefaultState();\n    };\n  }\n\n  csvToJson(file, fileDataProperty) {\n    let fileReader = new FileReader(); //creating new FileReader object\n\n    fileReader.readAsText(file, \"UTF-8\");\n\n    fileReader.onload = () => {\n      var lines = fileReader.result.split(/\\r\\n|\\r|\\n/g); //split by new line depending on system\n\n      var result = [];\n      var headers = lines[0].split(\",\");\n      var len = lines.length;\n\n      for (var i = 0; i < headers.length; i++) {\n        var obj = {};\n        var values = [];\n\n        for (var j = 1; j < len - 1; j++) {\n          var currentline = lines[j].split(\",\");\n          values.push(parseFloat(currentline[i]));\n        }\n\n        obj[headers[i]] = values;\n        result.push(obj);\n      }\n\n      var json = JSON.stringify(result); //JSON\n\n      json = json.replaceAll(\"{\", \"\");\n      json = json.replaceAll(\"}\", \"\");\n      json = json.substring(1, json.length - 1); // remove wrapping []\n\n      json = \"{\" + json + \"}\";\n      this.setState({\n        [fileDataProperty]: json\n      });\n    };\n  } // file selected handler\n\n\n  setDefaultState() {\n    this.setState(initialState);\n  } // if any of conditions are satisfied -> form is incomplete -> disable submit button\n\n\n  checkFormValidation() {\n    const {\n      detectorType,\n      learnFileName,\n      anomalyFileName,\n      learnFileError,\n      anomalyFileError\n    } = this.state;\n    if (detectorType === initialState.detectorType) return true;\n    if (learnFileName === initialState.learnFileName || learnFileError) return true;\n    if (anomalyFileName === initialState.anomalyFileName || anomalyFileError) return true;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      className: \"m-3 items mainForm needs-validation\",\n      noValidate: true,\n      onSubmit: this.submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            className: \"mr-sm-2\",\n            onChange: this.selectionChanged,\n            custom: true,\n            value: this.state.detectorType,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Choose Algorithem...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"regression\",\n              children: \"Regression\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hybrid\",\n              children: \"Hybrid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.File, {\n              className: \"inputFile\",\n              id: \"custom-file\",\n              custom: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.File.Input, {\n                name: \"learnFileName\",\n                onInput: this.fileSelected,\n                isInvalid: this.state.learnFileError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.File.Label, {\n                children: this.state.learnFileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"file is not CSV type!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.File, {\n              className: \"inputFile\",\n              id: \"custom-file\",\n              label: this.state.anomalyFileName,\n              name: \"anomalyFileName\",\n              onInput: this.fileSelected,\n              custom: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: this.checkFormValidation(),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: this.state.anomalyReport ? JSON.stringify(this.state.anomalyReport) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default InputForm;","map":{"version":3,"sources":["C:/Users/97205/Desktop/ass2/AnomalyDetectionWebApp/frontend/src/components/inputForm.jsx"],"names":["React","Component","Button","Row","Col","Form","Card","axios","initialState","detectorType","learnFileName","anomalyFileName","learnFile","anomalyFile","anomalyReport","learnFileError","anomalyFileError","InputForm","state","selectionChanged","event","setState","target","value","fileSelected","file","files","file_type","type","valid_extensions","fileNameProperty","name","fileName","console","log","fileDataProperty","replace","fileError","includes","csvToJson","submitHandler","preventDefault","post","learn","anomaly","then","response","data","report","catch","err","reset","fileReader","FileReader","readAsText","onload","lines","result","split","headers","len","length","i","obj","values","j","currentline","push","parseFloat","json","JSON","stringify","replaceAll","substring","setDefaultState","checkFormValidation","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nimport \"../style.css\";\r\nimport axios from \"axios\";\r\n// an initial state to fall back to\r\nconst initialState = {\r\n  detectorType: \"\",\r\n  learnFileName: \"Please Upload Learn CSV\",\r\n  anomalyFileName: \"Please Upload Anomaly CSV\",\r\n  learnFile: null, // learn file\r\n  anomalyFile: null, // test file\r\n  anomalyReport: null,\r\n  learnFileError: false, // for validation\r\n  anomalyFileError: false, // for validation\r\n};\r\n\r\nclass InputForm extends Component {\r\n  state = initialState;\r\n\r\n  selectionChanged = (event) => {\r\n    this.setState({ detectorType: event.target.value });\r\n  };\r\n\r\n  csvToJson(file, fileDataProperty) {\r\n    let fileReader = new FileReader(); //creating new FileReader object\r\n    fileReader.readAsText(file, \"UTF-8\");\r\n    fileReader.onload = () => {\r\n      var lines = fileReader.result.split(/\\r\\n|\\r|\\n/g); //split by new line depending on system\r\n      var result = [];\r\n      var headers = lines[0].split(\",\");\r\n      var len = lines.length;\r\n      for (var i = 0; i < headers.length; i++) {\r\n        var obj = {};\r\n        var values = [];\r\n        for (var j = 1; j < len - 1; j++) {\r\n          var currentline = lines[j].split(\",\");\r\n          values.push(parseFloat(currentline[i]));\r\n        }\r\n        obj[headers[i]] = values;\r\n        result.push(obj);\r\n      }\r\n      var json = JSON.stringify(result); //JSON\r\n      json = json.replaceAll(\"{\", \"\");\r\n      json = json.replaceAll(\"}\", \"\");\r\n      json = json.substring(1, json.length - 1); // remove wrapping []\r\n      json = \"{\" + json + \"}\";\r\n      this.setState({ [fileDataProperty]: json });\r\n    };\r\n  }\r\n  // file selected handler\r\n  fileSelected = (event) => {\r\n    let file = event.target.files[0];\r\n    let file_type = file.type; //getting selected file type\r\n    let valid_extensions = [\"application/vnd.ms-excel\", \"csv\"]; //adding some valid csv extensions in array\r\n    let fileNameProperty = event.target.name;\r\n    let fileName = event.target.files[0].name;\r\n    console.log(fileNameProperty);\r\n    console.log(this.state.learnFileName);\r\n    this.setState({ [fileNameProperty]: fileName });\r\n    console.log(this.state.learnFileName);\r\n    let fileDataProperty = fileNameProperty.replace(\"Name\", \"\");\r\n    let fileError = fileNameProperty.replace(\"Name\", \"Error\");\r\n    if (valid_extensions.includes(file_type)) {\r\n      // set error to be false\r\n      this.setState({ [fileError]: false });\r\n      // valid extention -> make json of it\r\n      this.csvToJson(file, fileDataProperty);\r\n    } else {\r\n      // invalid type -> raise error\r\n      this.setState({ [fileError]: true });\r\n    }\r\n  };\r\n\r\n  setDefaultState() {\r\n    this.setState(initialState);\r\n  }\r\n  // if any of conditions are satisfied -> form is incomplete -> disable submit button\r\n  checkFormValidation() {\r\n    const {\r\n      detectorType,\r\n      learnFileName,\r\n      anomalyFileName,\r\n      learnFileError,\r\n      anomalyFileError,\r\n    } = this.state;\r\n    if (detectorType === initialState.detectorType) return true;\r\n    if (learnFileName === initialState.learnFileName || learnFileError)\r\n      return true;\r\n    if (anomalyFileName === initialState.anomalyFileName || anomalyFileError)\r\n      return true;\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(\"/detect\", {\r\n        detectorType: this.state.detectorType,\r\n        learn: this.state.learnFile,\r\n        anomaly: this.state.anomalyFile,\r\n      })\r\n      .then((response) => {\r\n        this.setState({ anomalyReport: response.data.report });\r\n      })\r\n      .catch((err) => console.log(err));\r\n    //set the form back to default\r\n    this.reset();\r\n    //this.setDefaultState();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form\r\n        className=\"m-3 items mainForm needs-validation\"\r\n        noValidate\r\n        onSubmit={this.submitHandler}\r\n      >\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              className=\"mr-sm-2\"\r\n              onChange={this.selectionChanged}\r\n              custom\r\n              value={this.state.detectorType}\r\n            >\r\n              <option value=\"\">Choose Algorithem...</option>\r\n              <option value=\"regression\">Regression</option>\r\n              <option value=\"hybrid\">Hybrid</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group>\r\n              <Form.File className=\"inputFile\" id=\"custom-file\" custom>\r\n                <Form.File.Input\r\n                  name=\"learnFileName\"\r\n                  onInput={this.fileSelected}\r\n                  isInvalid={this.state.learnFileError}\r\n                />\r\n                <Form.File.Label>{this.state.learnFileName}</Form.File.Label>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  file is not CSV type!\r\n                </Form.Control.Feedback>\r\n              </Form.File>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group>\r\n              <Form.File\r\n                className=\"inputFile\"\r\n                id=\"custom-file\"\r\n                label={this.state.anomalyFileName}\r\n                name=\"anomalyFileName\"\r\n                onInput={this.fileSelected}\r\n                custom\r\n              ></Form.File>\r\n              {/* <Form.File className=\"inputFile\" id=\"custom-file\" custom>\r\n                <Form.File.Input\r\n                  name=\"anomalyFileName\"\r\n                  onInput={this.fileSelected}\r\n                  isInvalid={this.state.anomalyFileError}\r\n                />\r\n                <Form.File.Label>{this.state.anomalyFileName}</Form.File.Label>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  file is not CSV type!\r\n                </Form.Control.Feedback>\r\n              </Form.File> */}\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Button type=\"submit\" disabled={this.checkFormValidation()}>\r\n              Submit\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Card>\r\n            <Card.Body>\r\n              {/* prints report iff not null */}\r\n              {this.state.anomalyReport\r\n                ? JSON.stringify(this.state.anomalyReport)\r\n                : \"\"}\r\n            </Card.Body>\r\n          </Card>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputForm;\r\n"]},"metadata":{},"sourceType":"module"}