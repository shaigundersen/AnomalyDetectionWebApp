{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97205\\\\Desktop\\\\ass2\\\\AnomalyDetectionWebApp\\\\frontend\\\\src\\\\components\\\\inputForm.jsx\";\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport \"../style.css\";\nimport axios from \"axios\"; // an initial state to fall back to\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  detectorType: \"\",\n  learnFileName: \"Please Upload Learn CSV\",\n  anomalyFileName: \"Please Upload Anomaly CSV\",\n  learnFile: null,\n  // learn file\n  anomalyFile: null,\n  // test file\n  anomalyReport: null,\n  errors: {\n    learnFileName: false\n  }\n};\n\nclass InputForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.selectionChanged = event => {\n      this.setState({\n        detectorType: event.target.value\n      });\n    };\n\n    this.fileSelected = event => {\n      let file = event.target.files[0];\n      let file_type = file.type; //getting selected file type\n\n      let valid_extensions = [\"application/vnd.ms-excel\", \"csv\"]; //adding some valid csv extensions in array\n\n      let fileNameProperty = event.target.name;\n\n      if (valid_extensions.includes(file_type)) {\n        let fileName = event.target.files[0].name;\n        this.setState({\n          [fileNameProperty]: fileName\n        });\n        let fileDataProperty = fileNameProperty.replace(\"Name\", \"\");\n        let fileReader = new FileReader(); //creating new FileReader object\n\n        fileReader.readAsText(file, \"UTF-8\");\n\n        fileReader.onload = () => {\n          var lines = fileReader.result.split(/\\r\\n|\\r|\\n/g); //split by new line depending on system\n\n          var result = [];\n          var headers = lines[0].split(\",\");\n          var len = lines.length;\n\n          for (var i = 0; i < headers.length; i++) {\n            var obj = {};\n            var values = [];\n\n            for (var j = 1; j < len - 1; j++) {\n              var currentline = lines[j].split(\",\");\n              values.push(parseFloat(currentline[i]));\n            }\n\n            obj[headers[i]] = values;\n            result.push(obj);\n          }\n\n          var json = JSON.stringify(result); //JSON\n\n          json = json.replaceAll(\"{\", \"\");\n          json = json.replaceAll(\"}\", \"\");\n          json = json.substring(1, json.length - 1); // remove wrapping []\n\n          json = \"{\" + json + \"}\";\n          this.setState({\n            [fileDataProperty]: json\n          });\n        };\n      } else {\n        // let errors = { ...this.state.errors };\n        // errors.fileTypeE = true;\n        // this.setState({ errors });\n        this.setState(prevState => ({ ...prevState,\n          errors: {\n            [fileNameProperty]: false\n          }\n        }));\n        console.log(this.state);\n      }\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      alert(\"submitted files!!!!\");\n      axios.post(\"/detect\", {\n        detectorType: this.state.detectorType,\n        learn: this.state.learnFile,\n        anomaly: this.state.anomalyFile\n      }).then(response => {\n        this.setState({\n          anomalyReport: response.data.report\n        });\n      }).catch(err => console.log(err)); //set the form back to default\n\n      this.setDefaultState();\n    };\n  }\n\n  setDefaultState() {\n    this.setState(initialState);\n  }\n\n  checkFormValidation() {\n    const {\n      detectorType,\n      learnFileName,\n      anomalyFileName\n    } = this.state;\n    const newErrors = {}; // if (detectorType === initialState.detectorType )\n    //   newErrors.detectorType = 'please select an Algorithem'\n    // if (learnFileName == initialState.learnFileName || learnFileName)\n    //   newErrors.learnFileName = 'please select an Algorithem'\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      className: \"m-3 items mainForm needs-validation\",\n      noValidate: true,\n      onSubmit: this.submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            className: \"mr-sm-2\",\n            onChange: this.selectionChanged,\n            custom: true,\n            value: this.state.detectorType,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Choose Algorithem...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"regression\",\n              children: \"Regression\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hybrid\",\n              children: \"Hybrid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.File, {\n              className: \"inputFile\",\n              id: \"custom-file\",\n              label: this.state.learnFileName,\n              onChange: this.fileSelected,\n              name: \"learnFileName\",\n              custom: true,\n              isInvalid: this.state.errors.fileTypeE\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.File, {\n              className: \"inputFile\",\n              id: \"custom-file\",\n              label: this.state.anomalyFileName,\n              name: \"anomalyFileName\",\n              onInput: this.fileSelected,\n              custom: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: this.state.anomalyReport ? JSON.stringify(this.state.anomalyReport) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default InputForm;","map":{"version":3,"sources":["C:/Users/97205/Desktop/ass2/AnomalyDetectionWebApp/frontend/src/components/inputForm.jsx"],"names":["React","Component","Button","Row","Col","Form","Card","axios","initialState","detectorType","learnFileName","anomalyFileName","learnFile","anomalyFile","anomalyReport","errors","InputForm","state","selectionChanged","event","setState","target","value","fileSelected","file","files","file_type","type","valid_extensions","fileNameProperty","name","includes","fileName","fileDataProperty","replace","fileReader","FileReader","readAsText","onload","lines","result","split","headers","len","length","i","obj","values","j","currentline","push","parseFloat","json","JSON","stringify","replaceAll","substring","prevState","console","log","submitHandler","preventDefault","alert","post","learn","anomaly","then","response","data","report","catch","err","setDefaultState","checkFormValidation","newErrors","render","fileTypeE"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nimport \"../style.css\";\r\nimport axios from \"axios\";\r\n// an initial state to fall back to\r\nconst initialState = {\r\n  detectorType: \"\",\r\n  learnFileName: \"Please Upload Learn CSV\",\r\n  anomalyFileName: \"Please Upload Anomaly CSV\",\r\n  learnFile: null, // learn file\r\n  anomalyFile: null, // test file\r\n  anomalyReport: null,\r\n  errors: { learnFileName: false },\r\n};\r\n\r\nclass InputForm extends Component {\r\n  state = initialState;\r\n\r\n  selectionChanged = (event) => {\r\n    this.setState({ detectorType: event.target.value });\r\n  };\r\n\r\n  // need to add some comments here..\r\n  fileSelected = (event) => {\r\n    let file = event.target.files[0];\r\n    let file_type = file.type; //getting selected file type\r\n    let valid_extensions = [\"application/vnd.ms-excel\", \"csv\"]; //adding some valid csv extensions in array\r\n    let fileNameProperty = event.target.name;\r\n    if (valid_extensions.includes(file_type)) {\r\n      let fileName = event.target.files[0].name;\r\n      this.setState({ [fileNameProperty]: fileName });\r\n      let fileDataProperty = fileNameProperty.replace(\"Name\", \"\");\r\n      let fileReader = new FileReader(); //creating new FileReader object\r\n      fileReader.readAsText(file, \"UTF-8\");\r\n      fileReader.onload = () => {\r\n        var lines = fileReader.result.split(/\\r\\n|\\r|\\n/g); //split by new line depending on system\r\n        var result = [];\r\n        var headers = lines[0].split(\",\");\r\n        var len = lines.length;\r\n        for (var i = 0; i < headers.length; i++) {\r\n          var obj = {};\r\n          var values = [];\r\n          for (var j = 1; j < len - 1; j++) {\r\n            var currentline = lines[j].split(\",\");\r\n            values.push(parseFloat(currentline[i]));\r\n          }\r\n          obj[headers[i]] = values;\r\n          result.push(obj);\r\n        }\r\n        var json = JSON.stringify(result); //JSON\r\n        json = json.replaceAll(\"{\", \"\");\r\n        json = json.replaceAll(\"}\", \"\");\r\n        json = json.substring(1, json.length - 1); // remove wrapping []\r\n        json = \"{\" + json + \"}\";\r\n        this.setState({ [fileDataProperty]: json });\r\n      };\r\n    } else {\r\n      // let errors = { ...this.state.errors };\r\n      // errors.fileTypeE = true;\r\n      // this.setState({ errors });\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        errors: { [fileNameProperty]: false },\r\n      }));\r\n      console.log(this.state);\r\n    }\r\n  };\r\n\r\n  setDefaultState() {\r\n    this.setState(initialState);\r\n  }\r\n  checkFormValidation() {\r\n    const { detectorType, learnFileName, anomalyFileName } = this.state;\r\n    const newErrors = {};\r\n    // if (detectorType === initialState.detectorType )\r\n    //   newErrors.detectorType = 'please select an Algorithem'\r\n    // if (learnFileName == initialState.learnFileName || learnFileName)\r\n    //   newErrors.learnFileName = 'please select an Algorithem'\r\n  }\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n    alert(\"submitted files!!!!\");\r\n    axios\r\n      .post(\"/detect\", {\r\n        detectorType: this.state.detectorType,\r\n        learn: this.state.learnFile,\r\n        anomaly: this.state.anomalyFile,\r\n      })\r\n      .then((response) => {\r\n        this.setState({ anomalyReport: response.data.report });\r\n      })\r\n      .catch((err) => console.log(err));\r\n    //set the form back to default\r\n    this.setDefaultState();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form\r\n        className=\"m-3 items mainForm needs-validation\"\r\n        noValidate\r\n        onSubmit={this.submitHandler}\r\n      >\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <Form.Control\r\n              as=\"select\"\r\n              className=\"mr-sm-2\"\r\n              onChange={this.selectionChanged}\r\n              custom\r\n              value={this.state.detectorType}\r\n            >\r\n              <option value=\"\">Choose Algorithem...</option>\r\n              <option value=\"regression\">Regression</option>\r\n              <option value=\"hybrid\">Hybrid</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group>\r\n              <Form.File\r\n                className=\"inputFile\"\r\n                id=\"custom-file\"\r\n                label={this.state.learnFileName}\r\n                onChange={this.fileSelected}\r\n                name=\"learnFileName\"\r\n                custom\r\n                isInvalid={this.state.errors.fileTypeE}\r\n              ></Form.File>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group>\r\n              <Form.File\r\n                className=\"inputFile\"\r\n                id=\"custom-file\"\r\n                label={this.state.anomalyFileName}\r\n                name=\"anomalyFileName\"\r\n                onInput={this.fileSelected}\r\n                custom\r\n              ></Form.File>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Button type=\"submit\">Submit</Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Card>\r\n            <Card.Body>\r\n              {/* prints report iff not null */}\r\n              {this.state.anomalyReport\r\n                ? JSON.stringify(this.state.anomalyReport)\r\n                : \"\"}\r\n            </Card.Body>\r\n          </Card>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputForm;\r\n"]},"metadata":{},"sourceType":"module"}